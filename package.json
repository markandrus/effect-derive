{
  "name": "@markandrus/effect-derive",
  "version": "0.1.1",
  "description": "Derive Covariant (Functor) instances and base functors for algebraic data types (ADTs)",
  "type": "module",
  "main": "lib/index.js",
  "exports": {
    "import": "lib/index.js",
    "module-sync": "lib/index.js",
    "types": "lib/index.d.ts"
  },
  "files": [
    "lib/deriveBaseFunctor.js",
    "lib/deriveCovariant.js",
    "lib/index.js",
    "lib/OutFile.js"
  ],
  "bin": {
    "effect-derive": "bin/effect-derive.js"
  },
  "scripts": {
    "build": "tsc",
    "generate:ListF": "tsx src/index.ts BaseFunctor --for-type List --discriminator type --in-file src/List.d.ts --out-file src/ListF.ts",
    "generate:listCovariant": "tsx src/index.ts Covariant --for-type List --discriminator type --in-file src/List.d.ts --out-file src/listCovariant.ts",
    "generate:nonEmptyListCovariant": "tsx src/index.ts Covariant --for-type NonEmptyList --in-file src/NonEmptyList.d.ts --out-file src/nonEmptyListCovariant.ts",
    "generate:roseTreeCovariant": "tsx src/index.ts Covariant --for-type RoseTree --in-file src/RoseTree.d.ts --out-file src/roseTreeCovariant.ts",
    "prepublish": "tsc"
  },
  "keywords": [
    "effect",
    "deriving",
    "functor",
    "covariant",
    "recursion-schemes"
  ],
  "author": "Mark Roberts <markandrusroberts@gmail.com>",
  "license": "BSD-3-Clause",
  "dependencies": {
    "@effect/typeclass": "^0.29.15",
    "effect": "^3.10.15",
    "ts-morph": "^24.0.0"
  },
  "devDependencies": {
    "@tsconfig/node22": "^22.0.0",
    "@types/node": "^22.9.0",
    "tsx": "^4.19.2",
    "typescript": "^5.6.3"
  }
}
